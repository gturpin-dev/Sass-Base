// range from 0rem to $ending rem
$ending: 5; // 5rem

$spacers: (
  "m": "margin",
  "mt": "margin-top",
  "mr": "margin-right",
  "mb": "margin-bottom",
  "ml": "margin-left",
  "p": "padding",
  "pt": "padding-top",
  "pr": "padding-right",
  "pb": "padding-bottom",
  "pl": "padding-left",
);

$multiple-spacers: (
  "mx": ["margin-left", "margin-right"],
  "my": ["margin-top", "margin-bottom"],
  "px": ["padding-left", "padding-right"],
  "py": ["padding-top", "padding-bottom"],
);

@each $bp-name, $breakpoint in $breakpoints {
  @include above($breakpoint) {
    $infix: infix($bp-name, $breakpoints);
    /// classic + multiple spacers
    /// ============================
    @for $i from 0 through $ending / .25 {

      @each $prefix, $rule in $spacers {
        .#{$infix}#{$prefix}-#{($i * 25)},
        .#{$infix}child-#{$prefix}-#{($i * 25)} > * {
          #{$rule}: $i * .25rem !important;
        }
      }

      @each $prefix, $rules in $multiple-spacers {
        .#{$infix}#{$prefix}-#{($i * 25)},
        .#{$infix}child-#{$prefix}-#{($i * 25)} > * {
          @each $rule in $rules {
            #{$rule}: $i * .25rem !important;
          }
        } // end prefix
      } // endeach
    } // endfor

    /// auto spacers
    /// ============================
    @each $prefix, $rule in $spacers {
      .#{$infix}#{$prefix}-auto { #{$rule}: auto !important; }
      .#{$infix}child-#{$prefix}-auto > * { #{$rule}: auto !important; }
    }

    @each $prefix, $rules in $multiple-spacers {
      @each $rule in $rules {
        .#{$infix}#{$prefix}-auto { #{$rule}: auto !important; }
        .#{$infix}child-#{$prefix}-auto > * { #{$rule}: auto !important; }
      }
    }
  }
}
