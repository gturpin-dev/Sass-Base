// step for value
$step: 25; // 25%
$ending: 100; // 100%, useless to go further

$props: (
  "w": (
    "prop": width,
    "unit": '%',
  ),
  "h": (
    "prop": height,
    "unit": '%',
  ),
  "vw": (
    "prop": width,
    "unit": 'vw',
  ),
  "vh": (
    "prop": height,
    "unit": 'vh',
  ),
);

/// classic sizing
/// ============================
@for $i from 0 through $ending/$step {
  $val: $i * $step;

  @each $prefix, $item in $props {
    .#{$prefix}-#{$val},
    .child-#{$prefix}-#{$val} > * {
      #{map-get($item, 'prop')}: $val + #{map-get($item, 'unit')};
      max-#{map-get($item, 'prop')}: $val + #{map-get($item, 'unit')};
    }
  }
}

/// auto sizing
/// ============================
@each $prefix, $item in $props {
  .#{$prefix}-auto,
  .child-#{$prefix}-auto > * {
    #{map-get($item, 'prop')}: auto;
    max-#{map-get($item, 'prop')}: 100 + #{map-get($item, 'unit')};
  }
}

/// extend items
/// ============================
.noextend,
.child-noextend > * {
  width: min-content;
  white-space: nowrap;
}
